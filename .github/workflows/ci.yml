name: Postman API Tests

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [ipp-merge-pr]

jobs:
  pr-merge:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'ipp-merge-pr'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Do API Tests (Fail)
        run: |
          echo "Failed API Tests"
          exit 1

  api-tests:
    name: Data-Driven API Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - folder: "basic"
            report-filename: positive-report
          - folder: "fail"
            report-filename: negative-report
    outputs:
      basic-result: ${{ steps.postman_run.outputs.basic-result }}
      fail-result: ${{ steps.postman_run.outputs.fail-result }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Execute Postman Collections
        id: postman_run
        uses: ./.github/workflows/actions/postman-run-collections
        with:
          collection: ./dog.collection.json
          folder: ${{matrix.folder}}
          report-filename: ${{matrix.report-filename}}

      - name: Store Postman Results as Outputs
        if: always()
        run: |
          echo "Matrix Information: ${{ matrix.folder }}"
          echo "Postman Run Output: ${{ steps.postman_run.outputs.report }}"
          
        

  post-comment:
    needs:
      - api-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Fail on Purpose
        id: fail_step
        run: |
          echo "This step is intentionally failing"
          exit 1

      - name: Build Report
        id: build_report
        if: always()
        run: |
          report=$(jq -cn --arg succeeded "${{ steps.fail_step.outcome }}" '{name: "Data-Driven API Tests", url: "https://example.com/report", succeeded: ($succeeded == "true")}')
          
          echo "Generated Report JSON: $report"
          echo "report=$report" >> $GITHUB_OUTPUT

      - name: Print report
        if: always()
        run: |
          echo "Report to json: ${{ toJSON(steps.build_report.outputs.report) }}"
          echo "Report: ${{ steps.build_report.outputs.report }}"

      - name: Post Comment on Jira
        uses: ./.github/workflows/actions/jira-commenter
        if: always()
        with:
          reports: '${{ steps.build_report.outputs.report }}'
          jira_user_api_token: 'api-token'
          ticket: 'TEST-123'
          jira_user_email: 'username'