name: Run Postman Collection
inputs:
  postman-collection:
    description: Postman Collection
    required: true
  postman-environment:
    description: Postman Collection Environment
    required: true
  report-filename:
    description: Filename of the Report
    required: true
    default: report
  api-key:
    description: Postman API Key (optional)
    required: false
    default: ""
  cf-client:
    description: Cloudflare Client ID (optional)
    required: false
    default: ""
  cf-password:
    description: Cloudflare Client Password (optional)
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install Newman
      run: npm install -g newman newman-reporter-htmlextra
      shell: bash

    - name: Create Directory for Postman results
      run: mkdir -p postmanResults
      shell: bash

    - name: Run collections
      run: |
        # Initial Command to run Newman with the provided inputs
        newman_cmd="newman run ${{ inputs.postman-collection }} -e ${{ inputs.postman-environment }} -r cli,htmlextra --reporter-htmlextra-export postmanResults/${{ inputs.report-filename }}.html"
        
        # Append API key if provided
        if [ "${{inputs.api-key}}" != "" ]; then
          newman_cmd="$newman_cmd --env-var \"apiKey=${{inputs.api-key}}\""
        fi
        
        # Append Cloudflare Credentials if provided
        if [ "${{inputs.cf-client}}" != "" ] && [ "${{inputs.cf-password}}" != "" ]; then
          newman_cmd="$newman_cmd --env-var \"cf_client=${{inputs.cf-client}}\" --env-var \"cf_password=${{inputs.cf-password}}\""
        fi

        # Execute the Newman command
        echo "Execute Newman command: $newman_cmd"
        $newman_cmd
      shell: bash

    - name: Upload Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ inputs.report-filename }}
        path: postmanResults/${{ inputs.report-filename }}.html
        retention-days: 10
