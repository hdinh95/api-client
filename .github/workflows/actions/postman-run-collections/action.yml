name: Run Postman Collection
inputs:
  collection:
    description: Postman collection
    required: true
  environment:
    description: Postman collection environment
    required: true
  datasource:
    description: Postman Data Source for running collections (optional)
    required: false
    default: ""
  folder:
    description: Postman collection folder to run (optional)
    required: false
    default: ""
  report-filename:
    description: Filename of the report
    required: true
    default: report
  report-directory:
    description: Directory to store the report (optional)
    required: false
    default: reports
  api-key:
    description: Postman API Key (optional)
    required: false
    default: ""
  cf-client:
    description: Cloudflare client ID (optional)
    required: false
    default: ""
  cf-password:
    description: Cloudflare client password (optional)
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install Newman
      run: npm install -g newman newman-reporter-htmlextra
      shell: bash

    - name: Create Directory for Postman results
      run: mkdir -p ${{inputs.report-directory}}
      shell: bash

    - name: Log
      run: pwd && ls create && ls reports
      shell: bash

    - name: Run collections
      run: |
        # Initial Command to run Newman with the provided inputs
        NEWMAN_CMD="newman run ${{ inputs.collection }} -e ${{ inputs.environment }} -r cli, htmlextra --reporter-htmlextra-export ${{inputs.report-directory}}/${{ inputs.report-filename }}.html"
        
        # Apply Postman Datasource
        if [ "${{inputs.datasource}}" != "" ]; then
        NEWMAN_CMD="$NEWMAN_CMD --iteration-data ${{ inputs.datasource}}"
        fi
        
        # Apply Postman Folder
        if [ "${{inputs.datasource}}" != "" ]; then
        NEWMAN_CMD="$NEWMAN_CMD --folder \"${{ inputs.folder}}\""
        fi
        
        # Apply API key
        if [ "${{inputs.api-key}}" != "" ]; then
        NEWMAN_CMD="$NEWMAN_CMD --env-var \"api-key=${{inputs.api-key}}\""
        fi
        
        # Apply Cloudflare Credentials
        if [ "${{inputs.cf-client}}" != "" ] && [ "${{inputs.cf-password}}" != "" ]; then
        NEWMAN_CMD="$NEWMAN_CMD --env-var \"cf-client=${{inputs.cf-client}}\" --env-var \"cf-password=${{inputs.cf-password}}\""
        fi
        
        # Execute the Newman command
        echo "Execute Newman command: $NEWMAN_CMD"
        $NEWMAN_CMD
      shell: bash

    - name: Log
      run: ls reports
      shell: bash

    - name: Upload Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ inputs.report-filename }}
        path: ${{inputs.report-directory}}/${{ inputs.report-filename }}.html
        retention-days: 14
